<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.hibernate.annotations.OnDeleteAction"/>
<fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
<fullyQualifiedTypeName name="javax.persistence.Basic"/>
<fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
<fullyQualifiedTypeName name="javax.persistence.OneToMany"/>
<fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
<fullyQualifiedTypeName name="javax.persistence.FetchType"/>
<fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
<fullyQualifiedTypeName name="javax.persistence.Temporal"/>
<fullyQualifiedTypeName name="javax.persistence.TemporalType"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.domain.support.AuditingEntityListener"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnoreProperties"/>
<fullyQualifiedTypeName name="org.springframework.data.annotation.CreatedDate"/>
<fullyQualifiedTypeName name="org.springframework.data.annotation.LastModifiedDate"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaAuditing"/>
<fullyQualifiedTypeName name="com.example.demo.entity.Post"/>
<fullyQualifiedTypeName name="com.example.demo.repository.CommentRepository"/>
<fullyQualifiedTypeName name="com.example.demo.repository.PostRepository"/>
<fullyQualifiedTypeName name="com.example.demo.entity.Comment"/>
<fullyQualifiedTypeName name="com.example.demo.exception.ResourceNotFoundException"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="lombok.EqualsAndHashCode"/>
<fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
<fullyQualifiedTypeName name="javax.persistence.Embeddable"/>
<fullyQualifiedTypeName name="javax.persistence.EmbeddedId"/>
<fullyQualifiedTypeName name="org.hibernate.validator.constraints.UniqueElements"/>
<fullyQualifiedTypeName name="com.example.demo.repository.AccountRepsoitory"/>
<fullyQualifiedTypeName name="com.example.demo.entity.Account"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.example.demo.repository.CustomerRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="javax.validation.Valid"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="java.awt.print.Pageable"/>
<fullyQualifiedTypeName name="com.example.demo.entity.Customer"/>
<fullyQualifiedTypeName name="org.springframework.data.domain.Page"/>
<fullyQualifiedTypeName name="javax.annotation.Generated"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="lombok.Setter"/>
<fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.bson.types.ObjectId"/>
<fullyQualifiedTypeName name="com.example.demo.repository.PostsRepository"/>
<fullyQualifiedTypeName name="com.example.demo.service.PostService"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.example.demo.model.Posts"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
</qualifiedTypeNameHistroy>
